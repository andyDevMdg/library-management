openapi: 3.0.3
info:
  title: Library API
  version: 1.0.0
  description: STD22089 - RAZAFINDRAKOTO Andy Avotiana
servers:
  - url: https://library.com
paths:
  /books:
    get:
      summary: Get all books
      description: The returned books are ordered by updated datetime.
      operationId: getBooks
      parameters:
        - in: query
          name: bookName
          description: Filter return books by given name
          required: false
          schema:
            type: string
        - in: query
          name: bookRelease
          description: Filter return books by intervals of dates of the releaseDate
          required: false
          schema:
            type: string
      responses:
        200:
          description: The list of filtered books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
    put:
      summary: Create or update a list of books
      operationId: crupdateBooks
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Book"
      responses:
        200:
          description: The list of created or updated books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Book"
  /authors:
    get:
      summary: Get all authors
      description: The returned authors are filtered by na√πe
      operationId: getAuthors
      parameters:
        - in: query
          name: authorName
          description: return authors by given name
          required: false
          schema:
            type: string
      responses:
        200:
          description: list of filtered authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Author"

    put:
      summary: Create or update a list of authors
      operationId: crupdateAuthors
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: "#/components/schemas/Author"
      responses:
        200:
          description: list of created or updated authors
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Author"

    delete:
      summary: Delete an author
      description: delete a student
      parameters:
        - in: query
          name: author
          description: name of the author that need to be deleted
          required: true
          schema:
            type: string
      responses:
        "200":
          description: successful operation
components:
  schemas:
    Book:
      type: object
      properties:
        id:
          type: string
        bookName:
          type: string
        author:
          type: string
        pageNumbers:
          type: integer
        topic:
          type: string
          enum:
            - ROMANCE
            - COMEDY
            - OTHER
        releaseDate:
          type: string
          format: date

    Author:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        sex:
          type: string
          format: char
          enum:
            - M
            - F
